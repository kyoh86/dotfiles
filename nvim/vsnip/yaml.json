{
    "github-workflow-test": {
        "prefix": "github-workflow-test",
        "body": "name: Deno Test\n\non:\n  push:\n    branches:\n      - main\n    paths:\n      - '**.ts'\n      - '.github/workflows/deno-test.yml'\n      - 'deno.jsonc'\n  pull_request:\n    branches:\n      - main\n    paths:\n      - '**.ts'\n\npermissions:\n  contents: read\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Setup repo\n        uses: actions/checkout@v3\n\n      - name: Setup Deno\n        uses: denoland/setup-deno@v1\n        with:\n          deno-version: v1.x\n\n      - name: Verify formatting\n        run: deno fmt --check\n\n      - name: Run linter\n        run: deno task lint\n\n      - name: Get Denops\n        run: |\n          git clone https://github.com/vim-denops/denops.vim\n          echo \"DENOPS_TEST_DENOPS_PATH=\\${PWD}/denops.vim\" >> \"\\$GITHUB_ENV\"\n\n      - uses: rhysd/action-setup-vim@v1\n        id: vim\n\n      - name: Export Vim Executable\n        run: |\n          echo \"DENOPS_TEST_VIM_EXECUTABLE=\\${{ steps.vim.outputs.executable }}\" >> \"\\$GITHUB_ENV\"\n\n      - uses: rhysd/action-setup-vim@v1\n        id: nvim\n        with:\n          neovim: true\n\n      - name: Export Neovim Executable\n        run: |\n          echo \"DENOPS_TEST_NVIM_EXECUTABLE=\\${{ steps.nvim.outputs.executable }}\" >> \"\\$GITHUB_ENV\"\n\n      - name: Run tests\n        run: deno task test\n"
    },
    "github-workflow-update": {
        "body": "name: Deno Update\n\non:\n  schedule:\n    - cron: \"0 9 * * *\"\n\njobs:\n  update:\n    permissions: write-all\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Setup repo\n        uses: actions/checkout@v3\n\n      - name: Setup Deno\n        uses: denoland/setup-deno@v1\n        with:\n          deno-version: v1.x\n\n      - name: Update dependencies with udd\n        id: run-deno-udd\n        env:\n          NO_COLOR: true\n        run: |\n          {\n            echo 'UDD_RESULT<<EOF'\n            deno run --allow-all https://deno.land/x/udd/main.ts \\$(find . -type f | grep -E \".*\\.([mc]?(ts|js)|(ts|js)x?)\\$\" -)\n            echo EOF\n          } >> \\$GITHUB_OUTPUT\n\n      - name: Verify formatting\n        run: deno fmt --check\n\n      - name: Run linter\n        run: deno task lint\n\n      - name: Get Denops\n        run: |\n          git clone https://github.com/vim-denops/denops.vim\n          echo \"DENOPS_TEST_DENOPS_PATH=\\${PWD}/denops.vim\" >> \"\\$GITHUB_ENV\"\n\n      - uses: rhysd/action-setup-vim@v1\n        id: vim\n\n      - name: Export Vim Executable\n        run: |\n          echo \"DENOPS_TEST_VIM_EXECUTABLE=\\${{ steps.vim.outputs.executable }}\" >> \"\\$GITHUB_ENV\"\n\n      - uses: rhysd/action-setup-vim@v1\n        id: nvim\n        with:\n          neovim: true\n\n      - name: Export Neovim Executable\n        run: |\n          echo \"DENOPS_TEST_NVIM_EXECUTABLE=\\${{ steps.nvim.outputs.executable }}\" >> \"\\$GITHUB_ENV\"\n\n      - name: Run tests\n        run: deno task test\n\n      - name: Create pull request\n        uses: peter-evans/create-pull-request@v5\n        with:\n          commit-message: \"chore(deps): Update deno dependencies\"\n          title: Update Deno dependencies\n          body: |-\n            Some external modules are stale.\n            <details><summary>Details</summary><div>\n\n            ```\n            \\${{ steps.run-deno-udd.outputs.UDD_RESULT }}\n            ```\n\n            </div></details>\n          branch: udd-update\n          author: GitHub <noreply@github.com>\n          delete-branch: true\n",
        "prefix": "github-workflow-update"
    }
}