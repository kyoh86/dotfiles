version: 2
# logfile: ./output.log
# loglevel: 1

tools:
  prettier: &prettier
    format-command: './node_modules/.bin/prettier'
  html-prettier: &html-prettier
    format-command: './node_modules/.bin/prettier ${--tab-width:tabWidth} ${--single-quote:singleQuote} --parser html'
  css-prettier: &css-prettier
    format-command: './node_modules/.bin/prettier --parser css'
  vim-vint: &vim-vint
    lint-command: 'vint -'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'
  markdown-markdownlint: &markdown-markdownlint
    lint-command: 'markdownlint -s'
    lint-stdin: true
    lint-formats:
      - '%f:%l %m'
      - '%f:%l:%c %m'
      - '%f: %l: %m'
  # golangci-lint: &golangci-lint
  #   lint-command: golangci-lint run
  #   lint-stdin: false

  # myvet-lint: &myvet-lint
  #   lint-command: test -d myvet && (test -x ./myvet/bin || go build -o ./myvet/bin ./myvet) && go vet -vettool=./myvet/bin
  #   lint-stdin: false
  sh-shellcheck: &sh-shellcheck
    lint-command: 'shellcheck -f gcc -x'
    lint-formats:
      - '%f:%l:%c: %trror: %m'
      - '%f:%l:%c: %tarning: %m'
      - '%f:%l:%c: %tote: %m'
  sh-shfmt: &sh-shfmt
    format-command: 'shfmt -ci -s -bn'
    format-stdin: true
languages:
  vim:
    - !!merge <<: *vim-vint
  markdown:
    - !!merge <<: *markdown-markdownlint
  go:
  # - <<: *golangci-lint
  # - <<: *myvet-lint
  sh:
    - !!merge <<: *sh-shellcheck
    - !!merge <<: *sh-shfmt
  typescript:
    - !!merge <<: *prettier
  html:
    - !!merge <<: *html-prettier
  css:
    - !!merge <<: *css-prettier
