#!/bin/bash

sudo apt update -y && sudo apt upgrade -y

# Library
sudo apt install -y \
    language-pack-ja

# Compile & Build
sudo apt install -y \
	autoconf        \
    gnupg         \
    lsb-release   \
	automake        \
	cmake           \
	fakeroot        \
	gettext         \
	kcc             \
	make            \
  ncurses-dev     \
  build-essential \
	ninja-build

# Enhance Shell
sudo apt install -y              \
	binutils                 \
	coreutils                \
	diffutils                \
	findutils                \
	direnv                   \
	inotify-tools            \
	man-db                   \
	zsh                      \
	zsh-autosuggestions      \
	zsh-syntax-highlighting

sudo add-apt-repository ppa:git-core/ppa
sudo apt update
sudo apt install -y git

# Development Environment
sudo apt install -y    \
	asciinema      \
	curl           \
	docker-compose \
	httpie         \
	jq             \
	openssh-client \
	patch          \
	ripgrep        \
	sed            \
	tidy           \
	tig            \
	wget           \
    git-email

# Programming Languages
sudo apt install -y \
    lua5.3      \
    lua5.4      \
	luajit        \
	luarocks

# Docker
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo dd of=/etc/apt/sources.list.d/docker.list
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
sudo groupadd docker
sudo usermod -aG docker $USER

# github-cli
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg \
        | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" \
        | sudo dd of=/etc/apt/sources.list.d/github-cli.list \
    && sudo apt update \
    && sudo apt install -y gh
gh auth login --git-protocol http --hostname github.com --web

# asdf
asdf_tmpdir="$(mktemp -d)"
trap "sudo rm -rf $asdf_tmpdir" EXIT
gh release download --repo=asdf-vm/asdf --archive=tar.gz --dir="$asdf_tmpdir"
pushd "$asdf_tmpdir"
tar -xvzf ./*.tar.gz
rm -rf ~/.asdf
mv asdf-*/ ~/.asdf
popd

sudo mkdir -p /usr/local/opt
sudo chmod 777 /usr/local/opt

# aws-cli
aws_tmpdir="$(mktemp -d)"
trap "sudo rm -rf $aws_tmpdir" EXIT
pushd "$aws_tmpdir"
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
popd

# deno
curl -fsSL https://deno.land/x/install/install.sh | sh

# go
sudo rm -rf /usr/local/go && curl -fsSL https://go.dev/dl/go1.19.3.linux-amd64.tar.gz | sudo tar -C /usr/local -xzv

# python
sudo apt install -y  \
    build-essential  \
    libyaml-dev      \
    libbz2-dev       \
    libdb-dev        \
    libreadline-dev  \
    libffi-dev       \
    libgdbm-dev      \
    liblzma-dev      \
    libncursesw5-dev \
    libsqlite3-dev   \
    libssl-dev       \
    zlib1g-dev       \
    uuid-dev         \
    tk-dev
asdf plugin add python
asdf install python latest
asdf global python latest system

# rust
asdf plugin add rust
asdf install rust latest
asdf global rust latest system

# ruby
asdf plugin add ruby
asdf install ruby latest
asdf global ruby latest system

# coursier (Scala)
asdf plugin add coursier
asdf install coursier latest
asdf global coursier latest system
coursier setup
coursier install metals

# node & npm
asdf plugin add nodejs
asdf install nodejs latest
asdf global nodejs latest system

npm install --global \
    textlint-rule-preset-ja-technical-writing \
    textlint-rule-preset-ja-spacing \
    textlint-rule-preset-jtf-style

# mysql
asdf plugin add mysql
asdf install mysql latest
asdf global mysql latest system

# postgresql
export LC_ALL=ja_JP.UTF-8
asdf plugin add postgres
asdf install postgres latest
asdf global postgres latest system

# sqlite
asdf plugin add sqlite
asdf install sqlite latest
asdf global sqlite latest system

# yarn
asdf plugin add yarn
asdf install yarn latest
asdf global yarn latest system

# delta
delta_tmpdir="$(mktemp -d)"
trap "sudo rm -rf $delta_tmpdir" EXIT
pushd "$delta_tmpdir"
gh release download --repo dandavison/delta --pattern 'git-delta_*_amd64.deb'
sudo dpkg -i git-delta_*_amd64.deb
popd

# ssh/config
mkdir -p ~/.ssh
local ssh_include="Include ~/.config/ssh/*.conf"
if ! grep -Fe "$ssh_include" ~/.ssh/config; then
    echo "$ssh_include" >> ~/.ssh/config
fi

# Neovim
eval "$(luarocks --lua-version=5.1 path)"
nvim_tmpdir="$(mktemp -d)"
trap "sudo rm -rf $nvim_tmpdir" EXIT
git clone --depth 1 -b nightly https://github.com/neovim/neovim "$nvim_tmpdir/neovim"
pushd "$nvim_tmpdir/neovim"
make CMAKE_BUILD_TYPE=Release
sudo make install
popd

echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo dd of=/etc/apt/sources.list.d/goreleaser.list
sudo apt update
sudo apt install nfpm

# gordon
go install github.com/kyoh86/gordon@latest
gordon install kyoh86/gordon
rm ~/go/bin/gordon
gordon restore ~/.config/gordon/bundle

# mongosh
wget -qO- https://www.mongodb.org/static/pgp/server-6.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-6.0.asc
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
sudo apt-get update
sudo apt-get install -y mongodb-mongosh
