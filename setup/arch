#!/bin/bash

# do https://blog.yukirii.dev/wsl2-arch-linux/ the first, and call me.

set -e

sudo pacman -Syy

# AUR helper
sudo pacman -Sy --needed \
  base-devel   \
  rustup       \
  git

paru_tmpdir="$(mktemp -d)"
git clone https://aur.archlinux.org/paru.git "$paru_tmpdir"
cd "$paru_tmpdur"
makepkg -si
cd -

# Compile & Build
paru -Sy --noconfirm \
  autoconf        \
  gnupg           \
  lsb-release     \
  automake        \
  cmake           \
  make            \
  fakeroot        \
  gettext         \
  kcc             \
  ncurses         \
  ninja

# Enhance Shell
paru -Sy --noconfirm      \
  binutils                \
  coreutils               \
  diffutils               \
  findutils               \
  direnv                  \
  inotify-tools           \
  man-db                  \
  zsh                     \
  zsh-autosuggestions     \
  zsh-syntax-highlighting

# Development Environment
paru -Sy --noconfirm \
  asciinema          \
  curl               \
  docker             \
  docker-compose     \
  httpie             \
  jq                 \
  openssh            \
  patch              \
  ripgrep            \
  sed                \
  tidy               \
  tig                \
  wget               \
  github-cli         \
  asdf-vm            \
  git-delta          \
  aws-cli

# Programming Languages
paru -Sy --noconfirm \
  go       \
  deno     \
  lua      \
	luajit   \
	luarocks

# wslu (WSL Utilities includes wslview, etc.)
sudo pacman-key init
wget https://pkg.wslutiliti.es/public.key
sudo pacman-key --add public.key
sudo pacman-key --lsign-key 2D4C887EB08424F157151C493DD50AA7E055D853
if grep -e wslutilities /etc/pacman.conf ; then
  :
else
  echo "[wslutilities]" | sudo tee /etc/pacman.conf
  echo "Server = https://pkg.wslutiliti.es/arch/" | sudo tee /etc/pacman.conf
fi
paru -Sy && paru -S --noconfirm wslu

# python
asdf plugin add python
asdf install python latest
asdf global python latest system

# rust
asdf plugin add rust
asdf install rust latest
asdf global rust latest system

# node & npm
asdf plugin add nodejs
asdf install nodejs latest
asdf global nodejs latest system

# Neovim
eval "$(luarocks --lua-version=5.1 path)"
nvim_tmpdir="$(mktemp -d)"
trap "sudo rm -rf $nvim_tmpdir" EXIT
git clone --depth 1 -b nightly https://github.com/neovim/neovim "$nvim_tmpdir/neovim"
pushd "$nvim_tmpdir/neovim"
make CMAKE_BUILD_TYPE=Release
sudo make install
popd

# SKK
skkdir="${HOME}/.local/share/skk"
skkfile="SKK-JISYO.L"
mkdir -p "${skkdir}"
curl -L --output "${skkdir}/${skkfile}" "https://github.com/skk-dev/dict/blob/master/${skkfile}?raw=true"

# gordon
go install github.com/kyoh86/gordon@latest
gordon install kyoh86/gordon
rm ~/go/bin/gordon
gordon restore ~/.config/gordon/bundle
